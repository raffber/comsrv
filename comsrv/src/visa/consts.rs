// copied and adapted from pyvisa

pub const VI_SUCCESS: u32 = 0x00000000;
pub const VI_SUCCESS_EVENT_EN: u32 = 0x3FFF0002;
pub const VI_SUCCESS_EVENT_DIS: u32 = 0x3FFF0003;
pub const VI_SUCCESS_QUEUE_EMPTY: u32 = 0x3FFF0004;
pub const VI_SUCCESS_TERM_CHAR: u32 = 0x3FFF0005;
pub const VI_SUCCESS_MAX_CNT: u32 = 0x3FFF0006;
pub const VI_SUCCESS_DEV_NPRESENT: u32 = 0x3FFF007D;
pub const VI_SUCCESS_TRIG_MAPPED: u32 = 0x3FFF007E;
pub const VI_SUCCESS_QUEUE_NEMPTY: u32 = 0x3FFF0080;
pub const VI_SUCCESS_NCHAIN: u32 = 0x3FFF0098;
pub const VI_SUCCESS_NESTED_SHARED: u32 = 0x3FFF0099;
pub const VI_SUCCESS_NESTED_EXCLUSIVE: u32 = 0x3FFF009A;
pub const VI_SUCCESS_SYNC: u32 = 0x3FFF009B;

// Status codes : warning
pub const VI_WARN_QUEUE_OVERFLOW: u32 = 0x3FFF000C;
pub const VI_WARN_CONFIG_NLOADED: u32 = 0x3FFF0077;
pub const VI_WARN_NULL_OBJECT: u32 = 0x3FFF0082;
pub const VI_WARN_NSUP_ATTR_STATE: u32 = 0x3FFF0084;
pub const VI_WARN_UNKNOWN_STATUS: u32 = 0x3FFF0085;
pub const VI_WARN_NSUP_BUF: u32 = 0x3FFF0088;

// The following one is a non-standard NI extension
pub const VI_WARN_EXT_FUNC_NIMPL: u32 = 0x3FFF00A9;

// Status codes : errors
pub const VI_ERROR_SYSTEM_ERROR: u32 = 0xBFFF0000;
pub const VI_ERROR_INV_OBJECT: u32 = 0xBFFF000E;
pub const VI_ERROR_RSRC_LOCKED: u32 = 0xBFFF000F;
pub const VI_ERROR_INV_EXPR: u32 = 0xBFFF0010;
pub const VI_ERROR_RSRC_NFOUND: u32 = 0xBFFF0011;
pub const VI_ERROR_INV_RSRC_NAME: u32 = 0xBFFF0012;
pub const VI_ERROR_INV_ACC_MODE: u32 = 0xBFFF0013;
pub const VI_ERROR_TMO: u32 = 0xBFFF0015;
pub const VI_ERROR_CLOSING_FAILED: u32 = 0xBFFF0016;
pub const VI_ERROR_INV_DEGREE: u32 = 0xBFFF001B;
pub const VI_ERROR_INV_JOB_ID: u32 = 0xBFFF001C;
pub const VI_ERROR_NSUP_ATTR: u32 = 0xBFFF001D;
pub const VI_ERROR_NSUP_ATTR_STATE: u32 = 0xBFFF001E;
pub const VI_ERROR_ATTR_READONLY: u32 = 0xBFFF001F;
pub const VI_ERROR_INV_LOCK_TYPE: u32 = 0xBFFF0020;
pub const VI_ERROR_INV_ACCESS_KEY: u32 = 0xBFFF0021;
pub const VI_ERROR_INV_EVENT: u32 = 0xBFFF0026;
pub const VI_ERROR_INV_MECH: u32 = 0xBFFF0027;
pub const VI_ERROR_HNDLR_NINSTALLED: u32 = 0xBFFF0028;
pub const VI_ERROR_INV_HNDLR_REF: u32 = 0xBFFF0029;
pub const VI_ERROR_INV_CONTEXT: u32 = 0xBFFF002A;
pub const VI_ERROR_QUEUE_OVERFLOW: u32 = 0xBFFF002D;
pub const VI_ERROR_NENABLED: u32 = 0xBFFF002F;
pub const VI_ERROR_ABORT: u32 = 0xBFFF0030;
pub const VI_ERROR_RAW_WR_PROT_VIOL: u32 = 0xBFFF0034;
pub const VI_ERROR_RAW_RD_PROT_VIOL: u32 = 0xBFFF0035;
pub const VI_ERROR_OUTP_PROT_VIOL: u32 = 0xBFFF0036;
pub const VI_ERROR_INP_PROT_VIOL: u32 = 0xBFFF0037;
pub const VI_ERROR_BERR: u32 = 0xBFFF0038;
pub const VI_ERROR_IN_PROGRESS: u32 = 0xBFFF0039;
pub const VI_ERROR_INV_SETUP: u32 = 0xBFFF003A;
pub const VI_ERROR_QUEUE_ERROR: u32 = 0xBFFF003B;
pub const VI_ERROR_ALLOC: u32 = 0xBFFF003C;
pub const VI_ERROR_INV_MASK: u32 = 0xBFFF003D;
pub const VI_ERROR_IO: u32 = 0xBFFF003E;
pub const VI_ERROR_INV_FMT: u32 = 0xBFFF003F;
pub const VI_ERROR_NSUP_FMT: u32 = 0xBFFF0041;
pub const VI_ERROR_LINE_IN_USE: u32 = 0xBFFF0042;
pub const VI_ERROR_NSUP_MODE: u32 = 0xBFFF0046;
pub const VI_ERROR_SRQ_NOCCURRED: u32 = 0xBFFF004A;
pub const VI_ERROR_INV_SPACE: u32 = 0xBFFF004E;
pub const VI_ERROR_INV_OFFSET: u32 = 0xBFFF0051;
pub const VI_ERROR_INV_WIDTH: u32 = 0xBFFF0052;
pub const VI_ERROR_NSUP_OFFSET: u32 = 0xBFFF0054;
pub const VI_ERROR_NSUP_VAR_WIDTH: u32 = 0xBFFF0055;
pub const VI_ERROR_WINDOW_NMAPPED: u32 = 0xBFFF0057;
pub const VI_ERROR_RESP_PENDING: u32 = 0xBFFF0059;
pub const VI_ERROR_NLISTENERS: u32 = 0xBFFF005F;
pub const VI_ERROR_NCIC: u32 = 0xBFFF0060;
pub const VI_ERROR_NSYS_CNTLR: u32 = 0xBFFF0061;
pub const VI_ERROR_NSUP_OPER: u32 = 0xBFFF0067;
pub const VI_ERROR_INTR_PENDING: u32 = 0xBFFF0068;
pub const VI_ERROR_ASRL_PARITY: u32 = 0xBFFF006A;
pub const VI_ERROR_ASRL_FRAMING: u32 = 0xBFFF006B;
pub const VI_ERROR_ASRL_OVERRUN: u32 = 0xBFFF006C;
pub const VI_ERROR_TRIG_NMAPPED: u32 = 0xBFFF006E;
pub const VI_ERROR_NSUP_ALIGN_OFFSET: u32 = 0xBFFF0070;
pub const VI_ERROR_USER_BUF: u32 = 0xBFFF0071;
pub const VI_ERROR_RSRC_BUSY: u32 = 0xBFFF0072;
pub const VI_ERROR_NSUP_WIDTH: u32 = 0xBFFF0076;
pub const VI_ERROR_INV_PARAMETER: u32 = 0xBFFF0078;
pub const VI_ERROR_INV_PROT: u32 = 0xBFFF0079;
pub const VI_ERROR_INV_SIZE: u32 = 0xBFFF007B;
pub const VI_ERROR_WINDOW_MAPPED: u32 = 0xBFFF0080;
pub const VI_ERROR_NIMPL_OPER: u32 = 0xBFFF0081;
pub const VI_ERROR_INV_LENGTH: u32 = 0xBFFF0083;
pub const VI_ERROR_INV_MODE: u32 = 0xBFFF0091;
pub const VI_ERROR_SESN_NLOCKED: u32 = 0xBFFF009C;
pub const VI_ERROR_MEM_NSHARED: u32 = 0xBFFF009D;
pub const VI_ERROR_LIBRARY_NFOUND: u32 = 0xBFFF009E;
pub const VI_ERROR_NSUP_INTR: u32 = 0xBFFF009F;
pub const VI_ERROR_INV_LINE: u32 = 0xBFFF00A0;
pub const VI_ERROR_FILE_ACCESS: u32 = 0xBFFF00A1;
pub const VI_ERROR_FILE_IO: u32 = 0xBFFF00A2;
pub const VI_ERROR_NSUP_LINE: u32 = 0xBFFF00A3;
pub const VI_ERROR_NSUP_MECH: u32 = 0xBFFF00A4;
pub const VI_ERROR_INTF_NUM_NCONFIG: u32 = 0xBFFF00A5;
pub const VI_ERROR_CONN_LOST: u32 = 0xBFFF00A6;

// The following two are a non-standard NI extensions
pub const VI_ERROR_MACHINE_NAVAIL: u32 = 0xBFFF00A7;
pub const VI_ERROR_NPERMISSION: u32 = 0xBFFF00A8;
